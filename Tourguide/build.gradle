buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.1.6.RELEASE")
    }
}

plugins {
    id 'org.springframework.boot' version '2.6.1'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"

group = 'tourguide'
version = 'v1'
sourceCompatibility = '1.8'
targetCompatibility = "1.8"


repositories {
    mavenCentral()
    flatDir {
        dirs 'libs'
    }
}

ext {
    set('springCloudVersion', "2021.0.0")
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web:2.6.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: '2.6.2'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:3.1.0'
    implementation group: 'com.jsoniter', name: 'jsoniter', version: '0.9.23'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation group: 'io.github.openfeign', name: 'feign-gson', version: '11.8'
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    testImplementation group: 'org.jacoco', name: 'org.jacoco.agent', version: '0.8.7'
    testImplementation 'org.apache.httpcomponents:httpcore:4.4.15'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:2.6.2'
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.4.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.4.2")

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        xml.required = true
        csv.required = false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

test.finalizedBy jacocoTestReport
check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.5
            }
        }
    }
}

test {
    useJUnitPlatform()
}


